// @import "common/var";

// Name:            Flex
// Description:     Utilities for layouts based on flexbox
//
// Component:       `el-flex-*`
//
// ========================================================================


/* ========================================================================
   Component: Flex
 ========================================================================== */

.el-flex { display: flex; }
.el-flex-inline { display: inline-flex; }

/*
 * Remove pseudo elements created by micro clearfix as precaution
 */

.el-flex::before,
.el-flex::after,
.el-flex-inline::before,
.el-flex-inline::after { display: none; }

/* Alignment
 ========================================================================== */

/*
 * Align items along the main axis of the current line of the flex container
 * Row: Horizontal
 */

// Default
.el-flex-left { justify-content: flex-start; }
.el-flex-center { justify-content: center; }
.el-flex-right { justify-content: flex-end; }
.el-flex-between { justify-content: space-between; }
.el-flex-around { justify-content: space-around; }

/* Phone landscape and bigger */
@media (min-width: $--sm) {

    .el-flex-left\@sm { justify-content: flex-start; }
    .el-flex-center\@sm { justify-content: center; }
    .el-flex-right\@sm { justify-content: flex-end; }
    .el-flex-between\@sm { justify-content: space-between; }
    .el-flex-around\@sm { justify-content: space-around; }

}

/* Tablet landscape and bigger */
@media (min-width: $--md) {

    .el-flex-left\@md { justify-content: flex-start; }
    .el-flex-center\@md { justify-content: center; }
    .el-flex-right\@md { justify-content: flex-end; }
    .el-flex-between\@md { justify-content: space-between; }
    .el-flex-around\@md { justify-content: space-around; }

}

/* Desktop and bigger */
@media (min-width: $--lg) {

    .el-flex-left\@lg { justify-content: flex-start; }
    .el-flex-center\@lg { justify-content: center; }
    .el-flex-right\@lg { justify-content: flex-end; }
    .el-flex-between\@lg { justify-content: space-between; }
    .el-flex-around\@lg { justify-content: space-around; }

}

/* Large screen and bigger */
@media (min-width: $--xl) {

    .el-flex-left\@xl { justify-content: flex-start; }
    .el-flex-center\@xl { justify-content: center; }
    .el-flex-right\@xl { justify-content: flex-end; }
    .el-flex-between\@xl { justify-content: space-between; }
    .el-flex-around\@xl { justify-content: space-around; }

}

/*
 * Align items in the cross axis of the current line of the flex container
 * Row: Vertical
 */

// Default
.el-flex-stretch { align-items: stretch; }
.el-flex-top { align-items: flex-start; }
.el-flex-middle { align-items: center; }
.el-flex-bottom { align-items: flex-end; }

/* Direction
 ========================================================================== */

// Default
.el-flex-row { flex-direction: row; }
.el-flex-row-reverse { flex-direction: row-reverse; }
.el-flex-column { flex-direction: column; }
.el-flex-column-reverse { flex-direction: column-reverse; }

/* Wrap
 ========================================================================== */

// Default
.el-flex-nowrap { flex-wrap: nowrap; }
.el-flex-wrap { flex-wrap: wrap; }
.el-flex-wrap-reverse { flex-wrap: wrap-reverse; }

/*
 * Aligns items within the flex container when there is extra space in the cross-axis
 * Only works if there is more than one line of flex items
 */

// Default
.el-flex-wrap-stretch { align-content: stretch; }
.el-flex-wrap-top { align-content: flex-start; }
.el-flex-wrap-middle { align-content: center; }
.el-flex-wrap-bottom { align-content: flex-end; }
.el-flex-wrap-between { align-content: space-between; }
.el-flex-wrap-around { align-content: space-around; }

/* Item ordering
 ========================================================================== */

/*
 * Default is 0
 */

.el-flex-first { order: -1;}
.el-flex-last { order: 99;}

/* Phone landscape and bigger */
@media (min-width: $--sm) {

    .el-flex-first\@sm { order: -1; }
    .el-flex-last\@sm { order: 99; }

}

/* Tablet landscape and bigger */
@media (min-width: $--md) {

    .el-flex-first\@md { order: -1; }
    .el-flex-last\@md { order: 99; }

}

/* Desktop and bigger */
@media (min-width: $--lg) {

    .el-flex-first\@lg { order: -1; }
    .el-flex-last\@lg { order: 99; }

}

/* Large screen and bigger */
@media (min-width: $--xl) {

    .el-flex-first\@xl { order: -1; }
    .el-flex-last\@xl { order: 99; }

}

/* Item dimensions
 ========================================================================== */

/*
 * Initial: 0 1 auto
 * Content dimensions, but shrinks
 */

/*
 * No Flex: 0 0 auto
 * Content dimensions
 */

.el-flex-none { flex: none; }

/*
 * Relative Flex: 1 1 auto
 * Space is allocated considering content
 */

.el-flex-auto { flex: auto; }

/*
 * Absolute Flex: 1 1 0%
 * Space is allocated solely based on flex
 */

.el-flex-1 { flex: 1; }
