<?php

namespace DoctrineProxies\__CG__\App\Entities;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class ProductVariant extends \App\Entities\ProductVariant implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'id', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'name', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'weight', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'remoteId', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'link', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'imageLink', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'price', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'currencyId'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'id', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'name', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'weight', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'remoteId', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'link', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'imageLink', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'price', '' . "\0" . 'App\\Entities\\ProductVariant' . "\0" . 'currencyId'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (ProductVariant $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getWeight(): float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWeight', []);

        return parent::getWeight();
    }

    /**
     * {@inheritDoc}
     */
    public function setWeight(float $weight): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWeight', [$weight]);

        parent::setWeight($weight);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemoteId(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemoteId', []);

        return parent::getRemoteId();
    }

    /**
     * {@inheritDoc}
     */
    public function setRemoteId(string $remoteId): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRemoteId', [$remoteId]);

        parent::setRemoteId($remoteId);
    }

    /**
     * {@inheritDoc}
     */
    public function getLink(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLink', []);

        return parent::getLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setLink(string $link): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLink', [$link]);

        parent::setLink($link);
    }

    /**
     * {@inheritDoc}
     */
    public function getImageLink(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getImageLink', []);

        return parent::getImageLink();
    }

    /**
     * {@inheritDoc}
     */
    public function setImageLink(string $imageLink): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setImageLink', [$imageLink]);

        parent::setImageLink($imageLink);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrice(): float
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrice', []);

        return parent::getPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrice(float $price): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrice', [$price]);

        parent::setPrice($price);
    }

    /**
     * {@inheritDoc}
     */
    public function hasPrice(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasPrice', []);

        return parent::hasPrice();
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrencyId(): int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrencyId', []);

        return parent::getCurrencyId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrencyId(int $currencyId): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrencyId', [$currencyId]);

        parent::setCurrencyId($currencyId);
    }

    /**
     * {@inheritDoc}
     */
    public function hasCurrencyId(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasCurrencyId', []);

        return parent::hasCurrencyId();
    }

}
